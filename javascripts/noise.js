// Generated by CoffeeScript 1.6.3
(function() {
  var NMinStep, NNoise, NWalk, NWalkDistance, d2, dim, initialized, noiseVals, noiseWalk;

  initialized = false;

  dim = 1024;

  d2 = dim * dim;

  NNoise = 30000;

  noiseVals = [];

  noiseVals.length = NNoise;

  NWalkDistance = 30;

  NMinStep = 1;

  NWalk = 2000;

  noiseWalk = [];

  noiseWalk.length = NWalk;

  $(function() {
    var init, setCanvas, t1;
    t1 = Date.now();
    init = function(cb) {
      var i, rval;
      initialized = true;
      i = 0;
      while (i < NNoise) {
        rval = Math.random();
        if (i < NWalk) {
          noiseWalk[i] = Math.round(rval * NWalkDistance + NMinStep);
        }
        noiseVals[i++] = Math.round(rval * 255);
      }
      console.log('init time', Date.now() - t1);
      return cb();
    };
    setCanvas = function() {
      var b, canvas, ctx, i, iNoise, iNoiseWalk, id, j,
        _this = this;
      canvas = window.document.getElementById("bkgCanvas");
      if (canvas && canvas.getContext) {
        ctx = canvas.getContext("2d");
        ctx.fillStyle = '#000';
        ctx.fillRect(0, 0, dim, dim);
        id = ctx.getImageData(0, 0, dim, dim);
        b = id.data;
        i = 0;
        iNoise = Math.round(Math.random() * NNoise);
        iNoiseWalk = Math.round(Math.random() * NWalk);
        console.log('offset iNoise,iNoiseWalk', iNoise, iNoiseWalk);
        while (i < d2) {
          j = i * 4;
          b[j] = b[j + 1] = b[j + 2] = noiseVals[iNoise];
          b[j + 3] = 255;
          iNoise++;
          if (iNoise >= NNoise) {
            iNoise = 0;
          }
          iNoiseWalk++;
          if (iNoiseWalk >= NWalk) {
            iNoiseWalk = 0;
          }
          i += noiseWalk[iNoiseWalk];
        }
        ctx.putImageData(id, 0, 0);
        console.log('total time', Date.now() - t1);
        setTimeout(function() {
          setCanvas();
          return false;
        }, 50);
      }
      return false;
    };
    return init(setCanvas);
  });

}).call(this);
